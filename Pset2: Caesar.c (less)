// Simple encryption program that requires user to enter a "key" as command-line argument to open program. 
// If key is valid (a single number with no non-numeric characters) then user is prompted to enter a message to encrypt. 
// Message is ecrypted by shifting each letter along the alphabet by the amount of the key (using ASCII value), case sensitive, and retaining any punctuation as-is.

#include <cs50.h>
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, string argv[])
{
    // declare some variables
    string arg;
    int key;
    char c;

    // Validate is one command line argument
    if (argc != 2)
    {
        printf("Usage: ./caesar key\n");
        return 1;
    }

    // Validate is numeric key
    arg = argv[1];
    for (int i = 0, n = strlen(arg); i < n; i++)
    {
        if (isdigit(arg[i]) == 0)
        {
            printf("Usage: ./caesar key\n");
            return 1;
        }
    }

    // convert keystring to int
    key = atoi(arg);

    // prompt for plaintext
    string ptext = get_string("plaintext: ");

    // print cipher text all chars
    printf("ciphertext: ");
    for (int i = 0, n = strlen(ptext); i < n; i++)
    {
        if (isupper(ptext[i]) != 0)
        {
            c = ptext[i];
            printf("%c", ((((c - 65) + key) % 26) + 65));
        }

        else if (islower(ptext[i]) != 0)
        {
            c = ptext[i];
            printf("%c", ((((c - 97) + key) % 26) + 97));
        }

        else
        {
            printf("%c", ptext[i]);
        }
    }
    printf("\n");
}
